{"version":3,"sources":["../../src/_middleware/autorize.js"],"names":["jwt","config","User","authorize","secret","algorithms","req","res","next","user","findByPk","sub","status","json","message","get"],"mappings":";AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAIA,SAASC,SAAT,GAAqB;AACnB,QAAMC,SAASH,OAAOG,MAAtB;AACA,SAAO;AACL;AACA;AACAJ,MAAI,EAAEI,MAAF,EAAUC,YAAY,CAAC,OAAD,CAAtB,EAAJ,CAHK;;AAKL;AACA,SAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACxB;AACA,UAAMC,OAAO,MAAMP,KAAKQ,QAAL,CAAcJ,IAAIG,IAAJ,CAASE,GAAvB,CAAnB;;AAEA;AACA,QAAI,CAACF,IAAL,EACE,OAAOF,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,cAAX,EAArB,CAAP;;AAEF;AACAR,QAAIG,IAAJ,GAAWA,KAAKM,GAAL,EAAX;AACAP;AACD,GAjBI,CAAP;AAmBD;;AAED,eAAeL,SAAf","file":"autorize.js","sourcesContent":["\r\nimport jwt from 'express-jwt';\r\nimport config from '../configs/config.js';\r\nimport User from '../models/user.model.js';\r\n\r\n\r\n\r\nfunction authorize() {\r\n  const secret = config.secret;\r\n  return [\r\n    // authenticate JWT token and attach decoded token to request as req.user\r\n    //    jwt({ secret, algorithms: ['HS256'] }),\r\n    jwt({ secret, algorithms: ['HS256'] }),\r\n\r\n    // attach full user record to request object\r\n    async (req, res, next) => {\r\n      // get user with id from token 'sub' (subject) property\r\n      const user = await User.findByPk(req.user.sub);\r\n\r\n      // check user still exists\r\n      if (!user)\r\n        return res.status(401).json({ message: 'Unauthorized' });\r\n\r\n      // authorization successful\r\n      req.user = user.get();\r\n      next();\r\n    }\r\n  ];\r\n}\r\n\r\nexport default authorize;\r\n"]}